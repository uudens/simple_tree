{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/initialize.coffee","app/lib/router.coffee","app/lib/view_helper.coffee","app/models/tree.coffee","app/models/tree_node.coffee","app/views/section_view.coffee","app/views/templates/section_view.hbs","app/views/templates/tree_node_view.hbs","app/views/tree_node_view.coffee","app/views/view.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/EA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;A","sourcesContent":["var Application, Router, SectionView;\n\nRouter = require('lib/router');\n\nSectionView = require('views/section_view');\n\nmodule.exports = Application = (function() {\n\n  function Application() {\n    _.extend(this, Backbone.Events);\n    this.router = new Router;\n    this.listenTo(this.router, 'route:defaultRoute', this._showSection);\n  }\n\n  Application.prototype._showSection = function() {\n    var section;\n    section = new SectionView;\n    return $('body').append(section.render().el);\n  };\n\n  return Application;\n\n})();\n","var Application;\n\nApplication = require('application');\n\n$(function() {\n  new Application();\n  return Backbone.history.start();\n});\n","var Router, application,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\napplication = require('application');\n\nmodule.exports = Router = (function(_super) {\n\n  __extends(Router, _super);\n\n  function Router() {\n    return Router.__super__.constructor.apply(this, arguments);\n  }\n\n  Router.prototype.routes = {\n    '*path': 'defaultRoute'\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","\n\n","var Tree, TreeNode,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nTreeNode = require('./tree_node');\n\nmodule.exports = Tree = (function(_super) {\n\n  __extends(Tree, _super);\n\n  function Tree() {\n    return Tree.__super__.constructor.apply(this, arguments);\n  }\n\n  Tree.prototype.id = 1;\n\n  Tree.prototype.localStorage = new Backbone.LocalStorage('tree');\n\n  Tree.prototype.toJSON = function() {\n    return this.get('children').toJSON();\n  };\n\n  Tree.prototype.parse = function(data) {\n    return {\n      children: this._getChildCollection(data)\n    };\n  };\n\n  Tree.prototype._getChildCollection = function(data) {\n    var child, collection, model, _i, _len;\n    collection = new Backbone.Collection;\n    for (_i = 0, _len = data.length; _i < _len; _i++) {\n      child = data[_i];\n      model = new TreeNode(_.omit(child, 'children'));\n      if (child.children) {\n        model.set({\n          children: this._getChildCollection(child.children)\n        });\n      }\n      collection.add(model);\n    }\n    return collection;\n  };\n\n  return Tree;\n\n})(Backbone.Model);\n","var TreeNode,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = TreeNode = (function(_super) {\n\n  __extends(TreeNode, _super);\n\n  function TreeNode() {\n    return TreeNode.__super__.constructor.apply(this, arguments);\n  }\n\n  return TreeNode;\n\n})(Backbone.Model);\n","var SectionView, Tree, TreeNodeView, template,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nTree = require('models/tree');\n\nTreeNodeView = require('./tree_node_view');\n\ntemplate = require('./templates/section_view');\n\nmodule.exports = SectionView = (function(_super) {\n\n  __extends(SectionView, _super);\n\n  function SectionView() {\n    return SectionView.__super__.constructor.apply(this, arguments);\n  }\n\n  SectionView.prototype.tagName = 'section';\n\n  SectionView.prototype.template = template;\n\n  SectionView.prototype.events = {\n    'click .reset': '_reset'\n  };\n\n  SectionView.prototype.ui = {\n    treeContainer: '.tree-container'\n  };\n\n  SectionView.prototype._tree = null;\n\n  SectionView.prototype.initialize = function() {\n    _.bindAll(this);\n    return this._loadTree(this.render);\n  };\n\n  SectionView.prototype.render = function() {\n    var node;\n    console.log('rendering');\n    SectionView.__super__.render.apply(this, arguments);\n    if (this._tree) {\n      this.ui.treeContainer.empty();\n      node = new TreeNodeView({\n        model: this._tree\n      });\n      this.ui.treeContainer.append(node.render().el);\n    }\n    return this;\n  };\n\n  SectionView.prototype._reset = function() {\n    return this._loadDefaultTree(this.render);\n  };\n\n  SectionView.prototype._loadDefaultTree = function(callback) {\n    var _this = this;\n    return $.getJSON('data/tree', function(data) {\n      _this._tree = new Tree;\n      _this._tree.set(_this._tree.parse(data));\n      window.tree = _this._tree;\n      return callback();\n    });\n  };\n\n  SectionView.prototype._loadTree = function(callback) {\n    var _this = this;\n    this._tree = new Tree;\n    return this._tree.fetch({\n      success: function() {\n        window.tree = _this._tree;\n        return callback();\n      }\n    });\n  };\n\n  return SectionView;\n\n})(Marionette.ItemView);\n","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var foundHelper, self=this;\n\n\n  return \"<h1>Tree</h1>\\n<button class=\\\"reset\\\">Load default tree</button>\\n<div class=\\\"tree-container\\\"></div>\\n\";});","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var buffer = \"\", stack1, foundHelper, self=this, functionType=\"function\", helperMissing=helpers.helperMissing, undef=void 0, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<button class=\\\"delete\\\">Delete</button>\\n<button class=\\\"add\\\">Add</button>\\n<p class=\\\"label\\\">\";\n  foundHelper = helpers.label;\n  stack1 = foundHelper || depth0.label;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"label\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"</p>\\n<ul class=\\\"children\\\"></ul>\\n\";\n  return buffer;});","var TreeNode, TreeNodeView, template,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\ntemplate = require('./templates/tree_node_view');\n\nTreeNode = require('../models/tree_node');\n\nmodule.exports = TreeNodeView = (function(_super) {\n\n  __extends(TreeNodeView, _super);\n\n  function TreeNodeView() {\n    return TreeNodeView.__super__.constructor.apply(this, arguments);\n  }\n\n  TreeNodeView.prototype.template = template;\n\n  TreeNodeView.prototype.tagName = 'li';\n\n  TreeNodeView.prototype.childViewContainer = '.children';\n\n  TreeNodeView.prototype.events = {\n    'click .delete': '_onDeleteClick',\n    'click .add': '_onAddClick',\n    'dblclick .label': '_onLabelDoubleClick',\n    'keydown': '_onKeyDown'\n  };\n\n  TreeNodeView.prototype.ui = {\n    label: '.label'\n  };\n\n  TreeNodeView.prototype._isEditing = false;\n\n  TreeNodeView.prototype.initialize = function() {\n    return this.collection = this.model.get('children');\n  };\n\n  TreeNodeView.prototype._edit = function() {\n    this._isEditing = true;\n    return this.ui.label.prop('contenteditable', true).focus();\n  };\n\n  TreeNodeView.prototype._stopEdit = function() {\n    this._isEditing = false;\n    return this.ui.label.prop('contenteditable', false);\n  };\n\n  TreeNodeView.prototype._onDeleteClick = function(e) {\n    e.stopPropagation();\n    return this.model.collection.remove(this.model);\n  };\n\n  TreeNodeView.prototype._onAddClick = function(e) {\n    e.stopPropagation();\n    return this.collection.add(new TreeNode({\n      label: 'New child'\n    }));\n  };\n\n  TreeNodeView.prototype._onLabelDoubleClick = function(e) {\n    e.stopPropagation();\n    return this._edit();\n  };\n\n  TreeNodeView.prototype._onKeyDown = function(e) {\n    if (e.which !== 13) {\n      return;\n    }\n    if (!this._isEditing) {\n      return;\n    }\n    this._stopEdit();\n    return this.model.set('label', this.ui.label.html());\n  };\n\n  return TreeNodeView;\n\n})(Marionette.CompositeView);\n","var View,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nrequire('lib/view_helper');\n\nmodule.exports = View = (function(_super) {\n\n  __extends(View, _super);\n\n  function View() {\n    this.render = __bind(this.render, this);\n    return View.__super__.constructor.apply(this, arguments);\n  }\n\n  View.prototype.template = function() {};\n\n  View.prototype.getRenderData = function() {};\n\n  View.prototype.render = function() {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  View.prototype.afterRender = function() {};\n\n  return View;\n\n})(Backbone.View);\n"]}