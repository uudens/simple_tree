{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/initialize.coffee","app/lib/router.coffee","app/lib/view_helper.coffee","app/views/section.coffee","app/views/templates/section.hbs","app/views/templates/tree_node.hbs","app/views/tree_node.coffee","app/views/view.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;A","sourcesContent":["var Application, Router, Section;\n\nRouter = require('lib/router');\n\nSection = require('views/section');\n\nmodule.exports = Application = (function() {\n\n  function Application() {\n    _.extend(this, Backbone.Events);\n    this.router = new Router();\n    this.listenTo(this.router, 'route:defaultRoute', this._buildTree);\n  }\n\n  Application.prototype._buildTree = function() {\n    var recursiveTree, section, treeData;\n    treeData = [\n      {\n        id: 'c4ca423',\n        label: 'Element #1'\n      }, {\n        id: 'f75849b',\n        label: 'Element #2',\n        children: [\n          {\n            id: 'ryg5rd',\n            label: 'Child #1 of element #2'\n          }\n        ]\n      }, {\n        id: '20dcc50',\n        label: 'Element #3',\n        children: [\n          {\n            id: '38a0b923',\n            label: 'Child #1 of element #3',\n            children: [\n              {\n                id: 'dcc509',\n                label: 'Subchild'\n              }, {\n                id: 'a0b9238',\n                label: 'Another subchild'\n              }\n            ]\n          }\n        ]\n      }\n    ];\n    recursiveTree = new Backbone.Model({\n      label: 'root',\n      children: this._getChildCollection(treeData)\n    });\n    section = new Section({\n      model: recursiveTree\n    });\n    return $('body').append(section.render().el);\n  };\n\n  Application.prototype._getChildCollection = function(data) {\n    var child, collection, model, _i, _len;\n    collection = new Backbone.Collection;\n    for (_i = 0, _len = data.length; _i < _len; _i++) {\n      child = data[_i];\n      model = new Backbone.Model(_.omit(child, 'children'));\n      if (child.children) {\n        model.set({\n          children: this._getChildCollection(child.children)\n        });\n      }\n      collection.add(model);\n    }\n    return collection;\n  };\n\n  return Application;\n\n})();\n","var Application;\n\nApplication = require('application');\n\n$(function() {\n  new Application();\n  return Backbone.history.start();\n});\n","var Router, application,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\napplication = require('application');\n\nmodule.exports = Router = (function(_super) {\n\n  __extends(Router, _super);\n\n  function Router() {\n    return Router.__super__.constructor.apply(this, arguments);\n  }\n\n  Router.prototype.routes = {\n    '*path': 'defaultRoute'\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","\n\n","var Section, TreeNode, template,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nTreeNode = require('./tree_node');\n\ntemplate = require('./templates/section');\n\nmodule.exports = Section = (function(_super) {\n\n  __extends(Section, _super);\n\n  function Section() {\n    return Section.__super__.constructor.apply(this, arguments);\n  }\n\n  Section.prototype.tagName = 'section';\n\n  Section.prototype.template = template;\n\n  Section.prototype.ui = {\n    treeContainer: '.tree-container'\n  };\n\n  Section.prototype.render = function() {\n    var node;\n    Section.__super__.render.apply(this, arguments);\n    node = new TreeNode({\n      model: this.model\n    });\n    this.ui.treeContainer.append(node.render().el);\n    return this;\n  };\n\n  return Section;\n\n})(Marionette.ItemView);\n","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var foundHelper, self=this;\n\n\n  return \"<h1>Tree</h1>\\n<div class=\\\"tree-container\\\"></div>\\n\";});","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var buffer = \"\", stack1, foundHelper, self=this, functionType=\"function\", helperMissing=helpers.helperMissing, undef=void 0, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<p class=\\\"label\\\">\";\n  foundHelper = helpers.label;\n  stack1 = foundHelper || depth0.label;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"label\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"</p>\\n<ul class=\\\"children\\\"></ul>\\n\";\n  return buffer;});","var TreeNode, template,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\ntemplate = require('./templates/tree_node');\n\nmodule.exports = TreeNode = (function(_super) {\n\n  __extends(TreeNode, _super);\n\n  function TreeNode() {\n    return TreeNode.__super__.constructor.apply(this, arguments);\n  }\n\n  TreeNode.prototype.template = template;\n\n  TreeNode.prototype.tagName = 'li';\n\n  TreeNode.prototype.childViewContainer = '.children';\n\n  TreeNode.prototype.initialize = function() {\n    return this.collection = this.model.get('children');\n  };\n\n  return TreeNode;\n\n})(Marionette.CompositeView);\n","var View,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nrequire('lib/view_helper');\n\nmodule.exports = View = (function(_super) {\n\n  __extends(View, _super);\n\n  function View() {\n    this.render = __bind(this.render, this);\n    return View.__super__.constructor.apply(this, arguments);\n  }\n\n  View.prototype.template = function() {};\n\n  View.prototype.getRenderData = function() {};\n\n  View.prototype.render = function() {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  View.prototype.afterRender = function() {};\n\n  return View;\n\n})(Backbone.View);\n"]}