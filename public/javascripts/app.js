(function(){"use strict";var e=typeof window!="undefined"?window:global;if(typeof e.require=="function")return;var t={},n={},r=function(e,t){return{}.hasOwnProperty.call(e,t)},i=function(e,t){var n=[],r,i;/^\.\.?(\/|$)/.test(t)?r=[e,t].join("/").split("/"):r=t.split("/");for(var s=0,o=r.length;s<o;s++)i=r[s],i===".."?n.pop():i!=="."&&i!==""&&n.push(i);return n.join("/")},s=function(e){return e.split("/").slice(0,-1).join("/")},o=function(t){return function(n){var r=s(t),o=i(r,n);return e.require(o,t)}},u=function(e,t){var r={id:e,exports:{}};return n[e]=r,t(r.exports,o(e),r),r.exports},a=function(e,s){var o=i(e,".");s==null&&(s="/");if(r(n,o))return n[o].exports;if(r(t,o))return u(o,t[o]);var a=i(o,"./index");if(r(n,a))return n[a].exports;if(r(t,a))return u(a,t[a]);throw new Error('Cannot find module "'+e+'" from '+'"'+s+'"')},f=function(e,n){if(typeof e=="object")for(var i in e)r(e,i)&&(t[i]=e[i]);else t[e]=n},l=function(){var e=[];for(var n in t)r(t,n)&&e.push(n);return e};e.require=a,e.require.define=f,e.require.register=f,e.require.list=l,e.require.brunch=!0})(),require.register("application",function(e,t,n){var r,i,s;i=t("lib/router"),s=t("views/section_view"),n.exports=r=function(){function e(){_.extend(this,Backbone.Events),this.router=new i,this.listenTo(this.router,"route:defaultRoute",this._showSection)}return e.prototype._showSection=function(){var e;return e=new s,$("body").append(e.render().el)},e}()}),require.register("entities/tree",function(e,t,n){var r,i,s,o={}.hasOwnProperty,u=function(e,t){function r(){this.constructor=e}for(var n in t)o.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};i=t("./tree_node"),s=t("./tree_nodes"),n.exports=r=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return u(t,e),t.prototype.id=1,t.prototype.localStorage=new Backbone.LocalStorage("tree"),t.prototype.parse=function(e){if(typeof e!="object")return;return e.isRecursive=this.get("isRecursive")!=null?this.get("isRecursive"):e.isRecursive,e.isRecursive?(console.debug("Parsing data using Recursive method"),e.children=this.getChildCollectionRecursively(e.children)):(console.debug("Parsing data using Iterative method"),e.children=this.getChildCollectionIteratively(e.children)),e},t.prototype.loadDefault=function(){var e=this;return $.getJSON("data/tree",function(t){return e.set(e.parse(t)),e.save()})},t.prototype.getChildCollectionRecursively=function(e){var t,n,r,o,u,a;n=new s;for(u=0,a=e.length;u<a;u++)t=e[u],o=new i(_.omit(t,"children")),r=t.children&&t.children.length,r&&o.set({children:this.getChildCollectionRecursively(t.children)}),n.add(o);return n},t.prototype.getChildCollectionIteratively=function(e){var t,n,r,o,u,a,f,l,c;n=new s,f=[n],u=[0];for(;;){for(r=l=0,c=u.length;l<c;r=++l){o=u[r],r||(t={children:e}),t=t.children&&t.children[o];if(!t){u.pop(),f.pop();break}}if(!t){if(!u.length)break;u[u.length-1]++;continue}a=new i(_.omit(t,"children")),_.last(f).add(a);if(t.children&&t.children.length){f.push(new s),a.set({children:_.last(f)}),u.push(0);continue}u[u.length-1]++}return n},t}(Backbone.Model)}),require.register("entities/tree_node",function(e,t,n){var r,i,s={}.hasOwnProperty,o=function(e,t){function r(){this.constructor=e}for(var n in t)s.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};i=t("./tree_nodes"),n.exports=r=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return o(t,e),t.prototype.initialize=function(){this.id||this.set({id:this._getUniqueId()});if(!this.get("children"))return this.set({children:new i})},t.prototype._getUniqueId=function(){return"n"+(Math.random()+1).toString(36).substring(7)},t}(Backbone.Model)}),require.register("entities/tree_nodes",function(e,t,n){var r,i={}.hasOwnProperty,s=function(e,t){function r(){this.constructor=e}for(var n in t)i.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};n.exports=r=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return s(t,e),t}(Backbone.Collection)}),require.register("initialize",function(e,t,n){var r;r=t("application"),$(function(){return new r,Backbone.history.start()})}),require.register("lib/event_hub",function(e,t,n){var r;r={},_.extend(r,Backbone.Events),n.exports=r}),require.register("lib/router",function(e,t,n){var r,i,s={}.hasOwnProperty,o=function(e,t){function r(){this.constructor=e}for(var n in t)s.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};i=t("application"),n.exports=r=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return o(t,e),t.prototype.routes={"*path":"defaultRoute"},t}(Backbone.Router)}),require.register("lib/trees",function(e,t,n){var r;n.exports=r={getRandom:function(){return this._capitalize(_.sample(this._trees))},_capitalize:function(e){return e.charAt(0).toUpperCase()+e.slice(1)},_trees:["almond","apple","apricot","ash","aspen","baobob","banyan","bark","beech","black ash","black willow","bigtooth aspen","birch","bodhi","bristlecone pine","buckeye","butternut","cabbage palmetto","camellia","catalpa","cedar","cherry","chestnut","choke cherry","coconut palm","cone","cottonwood","crape myrtle","crabapple","cypress","date","dogwood","Douglas fir","elderberry","elm","eucalyptus","evergreen","fig","filbert","fir","flame tree","forest","ginkgo","goldenlarch","grapefruit","grove","gum","hackberry","haw","hawthorn","hemlock","hickory","holly","honeylocust","ipil","ironwood","jack pine","jacktree","Japanese maple","jujuba","jungle","juniper","kapok tree","katsura","kukui nut","kumquat","larch","lilac","linden","live oak","loblolly pine","locust","loquat","lone pine","longleaf pine","magnolia","mahogany","mangrove","maple","mimosa","mountainash","nectarine","northern red oak","Norway maple","oak","olive","orange","paper birch","palm","palmetto","pawpaw","peach","pear","pecan","persimmon","pine","piÃ±on pine","plum","poplar","quaking aspen","quince","rain forest","redbud","redwood","rings","rubber tree","sassafras","Scotch pine","sequoia","serviceberry","silver maple","Sitka spruce","slippery elm","spruce","sugar maple","sweetgum","sycamore","teak","tree","tulip-tree","tupelo","upright red maple","viburnum","walnut","weeping willow","white ash","white oak","white pine","willow","wingnut","witchhazel","yellowwood","yew","zebrawood","zelkova"]}}),require.register("spec/tree",function(e,t,n){var r;r=t("../entities/tree"),describe("Tree",function(){return beforeEach(function(){return this._data={isRecursive:!0,children:[{label:"topLevel1"},{label:"topLevel2",children:[{label:"2ndLevel1"}]}]}}),describe("#parse",function(){return describe("when isRecursive: true",function(){return it("should call #getChildCollectionRecursively",function(){var e;return e=new r,spyOn(e,"getChildCollectionRecursively"),e.set(e.parse(this._data)),expect(e.getChildCollectionRecursively).toHaveBeenCalled()}),it("should not call #getChildCollectionIteratively",function(){var e;return e=new r,spyOn(e,"getChildCollectionIteratively"),e.set(e.parse(this._data)),expect(e.getChildCollectionIteratively).not.toHaveBeenCalled()})}),describe("when isRecursive: false",function(){return beforeEach(function(){return this._data.isRecursive=!1}),it("should not call #getChildCollectionRecursively",function(){var e;return e=new r,spyOn(e,"getChildCollectionRecursively"),e.set(e.parse(this._data)),expect(e.getChildCollectionRecursively).not.toHaveBeenCalled()}),it("should call #getChildCollectionIteratively",function(){var e;return e=new r,spyOn(e,"getChildCollectionIteratively"),e.set(e.parse(this._data)),expect(e.getChildCollectionIteratively).toHaveBeenCalled()})})}),describe("#getChildCollectionRecursively",function(){return it("should be recursive (call itself)",function(){var e,t;return t=new r,spyOn(t,"getChildCollectionRecursively").and.callThrough(),e=t.getChildCollectionRecursively(this._data.children),expect(t.getChildCollectionRecursively.calls.count()).toBeGreaterThan(1)}),it("should generate nested child collections and models",function(){var e,t;return t=new r,e=t.getChildCollectionRecursively(this._data.children),expect(e instanceof Backbone.Collection).toBe(!0),expect(e.at(1)instanceof Backbone.Model).toBe(!0),expect(e.at(1).get("children")instanceof Backbone.Collection).toBe(!0)}),it("should populate models with data from JSON",function(){var e,t;return t=new r,e=t.getChildCollectionRecursively(this._data.children),expect(e.at(0).get("label")).toBe("topLevel1"),expect(e.at(1).get("label")).toBe("topLevel2"),expect(e.at(1).get("children").at(0).get("label")).toBe("2ndLevel1")})}),describe("#getChildCollectionIteratively",function(){return it("should not be recursive (not call itself)",function(){var e,t;return t=new r,spyOn(t,"getChildCollectionIteratively").and.callThrough(),e=t.getChildCollectionIteratively(this._data.children),expect(t.getChildCollectionIteratively.calls.count()).toBe(1)}),it("should generate nested child collections and models",function(){var e,t;return t=new r,e=t.getChildCollectionIteratively(this._data.children),expect(e instanceof Backbone.Collection).toBe(!0),expect(e.at(1)instanceof Backbone.Model).toBe(!0),expect(e.at(1).get("children")instanceof Backbone.Collection).toBe(!0)}),it("should populate models with data from JSON",function(){var e,t;return t=new r,e=t.getChildCollectionIteratively(this._data.children),expect(e.at(0).get("label")).toBe("topLevel1"),expect(e.at(1).get("label")).toBe("topLevel2"),expect(e.at(1).get("children").at(0).get("label")).toBe("2ndLevel1")})}),describe("#loadDefault",function(){return it("should GET data/tree",function(){var e,t;return t=new r,spyOn($,"ajax"),t.loadDefault(),e=_.first($.ajax.calls.argsFor(0)),expect(e.type).toBe("get"),expect(e.url).toBe("data/tree")}),it("should parse result",function(){var e,t;return t=new r,spyOn($,"ajax"),spyOn(t,"parse"),t.loadDefault(),e=_.first($.ajax.calls.argsFor(0)),e.success(this._data),expect(t.parse).toHaveBeenCalledWith(this._data)})})})}),require.register("spec/tree_node",function(e,t,n){var r;r=t("../entities/tree_node"),describe("TreeNode",function(){return describe("#initialize",function(){return it("should generate id if not provided",function(){var e;return e=new r,expect(e.id).toBeTruthy()}),it("should not overwrite id if it's provided",function(){var e;return e=new r({id:1}),expect(e.id).toBe(1)}),it("should have children collection even if not provided",function(){var e;return e=new r,expect(e.get("children")instanceof Backbone.Collection).toBe(!0)}),it("should not overwrite children collection if it's provided",function(){var e,t;return e=new Backbone.Collection,t=new r({children:e}),expect(t.get("children")).toBe(e)})})})}),require.register("views/section_view",function(e,t,n){var r,i,s,o,u,a={}.hasOwnProperty,f=function(e,t){function r(){this.constructor=e}for(var n in t)a.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};s=t("../entities/tree"),o=t("./tree_node_view"),r=t("../lib/event_hub"),u=t("./templates/section_view"),n.exports=i=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return f(t,e),t.prototype.tagName="section",t.prototype.template=u,t.prototype.events={"click .reset":"_reset",'change input[name="isRecursive"]':"_onParseMethodChange"},t.prototype.ui={treeContainer:".tree-container",recursiveBox:'input[name="isRecursive"]'},t.prototype._tree=null,t.prototype.initialize=function(){return _.bindAll(this),this.listenTo(r,"node_updated node_added node_removed",this._saveTree),this._loadTree()},t.prototype.serializeData=function(){return{isRecursive:this._tree.get("isRecursive")}},t.prototype.render=function(){var e;return t.__super__.render.apply(this,arguments),this._tree&&(this.ui.treeContainer.empty(),e=new o({model:this._tree,eventHub:r}),this.ui.treeContainer.append(e.render().el)),this},t.prototype._reset=function(){return this._tree.loadDefault(this.render)},t.prototype._loadTree=function(){var e=this;return this._tree=new s,this.listenTo(this._tree,"sync",this.render),this._tree.fetch({error:this._reset,success:function(){if(e._tree.get("children").isEmpty())return e._reset()}})},t.prototype._saveTree=function(){if(this._tree)return this._tree.save()},t.prototype._onParseMethodChange=function(){return this._tree.set({isRecursive:this.ui.recursiveBox.filter(":checked").val()==="true"}),this._saveTree()},t}(Marionette.ItemView)}),require.register("views/templates/section_view",function(e,t,n){n.exports=Handlebars.template(function(e,t,n,r,i){function c(e,t){return" checked"}function h(e,t){return" checked"}n=n||e.helpers;var s="",o,u,a,f,l=this;s+='<header>\n	<h1>Tree</h1>\n	<div class="settings">\n		<label>\n			<input type="radio" name="isRecursive" value="true"',a=n.isRecursive,o=a||t.isRecursive,u=n["if"],f=l.program(1,c,i),f.hash={},f.fn=f,f.inverse=l.noop,o=u.call(t,o,f);if(o||o===0)s+=o;s+=' />\n			Use recursive data parsing\n		</label>\n		<label>\n			<input type="radio" name="isRecursive" value="false"',a=n.isRecursive,o=a||t.isRecursive,u=n.unless,f=l.program(3,h,i),f.hash={},f.fn=f,f.inverse=l.noop,o=u.call(t,o,f);if(o||o===0)s+=o;return s+=' />\n			Use iterative data parsing\n		</label>\n		<button class="reset">Load default data</button>\n	</div>\n</header>\n<ul class="tree-container"></ul>\n',s})}),require.register("views/templates/tree_node_view",function(e,t,n){n.exports=Handlebars.template(function(e,t,n,r,i){n=n||e.helpers;var s="",o,u,a=this,f="function",l=n.helperMissing,c=void 0,h=this.escapeExpression;return s+='<div class="itemHead">\n	<button class="delete" title="Delete this item with all it\'s children">Delete</button>\n	<button class="add" title="Add new child to this item">Add</button>\n	<p class="label" title="Double click to edit label">',u=n.label,o=u||t.label,typeof o===f?o=o.call(t,{hash:{}}):o===c&&(o=l.call(t,"label",{hash:{}})),s+=h(o)+'</p>\n</div>\n<ul class="children"></ul>\n',s})}),require.register("views/tree_node_view",function(e,t,n){var r,i,s,o,u={}.hasOwnProperty,a=function(e,t){function r(){this.constructor=e}for(var n in t)u.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};o=t("./templates/tree_node_view"),r=t("../entities/tree_node"),s=t("../lib/trees"),n.exports=i=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}return a(t,e),t.prototype.template=o,t.prototype.tagName="li",t.prototype.childViewContainer=".children",t.prototype.events={"click .delete":"_onDeleteClick","click .add":"_onAddClick","dblclick .label":"_onLabelDoubleClick",keydown:"_onKeyDown"},t.prototype.ui={label:".label"},t.prototype._eventHub=null,t.prototype._isEditing=!1,t.prototype.initialize=function(e){return this._eventHub=e.eventHub,_.bindAll(this),this.collection=this.model.get("children")},t.prototype.childViewOptions=function(){return{eventHub:this._eventHub}},t.prototype._edit=function(){return this._isEditing=!0,$(document).on("click",this._onDocumentClickWhileEditing),this.ui.label.prop("contenteditable",!0).focus()},t.prototype._stopEdit=function(){return this._isEditing=!1,$(document).off("click",this._onDocumentClickWhileEditing),this.ui.label.prop("contenteditable",!1),this.model.set("label",this.ui.label.html()),this._trigger("node_updated")},t.prototype._trigger=function(e){if(this._eventHub)return this._eventHub.trigger(e)},t.prototype._onDeleteClick=function(e){return e.stopPropagation(),this.model.collection.remove(this.model),this._trigger("node_removed")},t.prototype._onAddClick=function(e){var t;return e.stopPropagation(),t=new r({label:s.getRandom()}),this.collection.add(t,{at:0}),this._trigger("node_added")},t.prototype._onLabelDoubleClick=function(e){return e.stopPropagation(),this._edit()},t.prototype._onKeyDown=function(e){if(e.which!==13)return;if(!this._isEditing)return;return this._stopEdit()},t.prototype._onDocumentClickWhileEditing=function(e){if(e.target===this.ui.label.get(0))return;return this._stopEdit()},t}(Marionette.CompositeView)})